---
name: Build

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Create a GitHub Release"
        required: true
        type: boolean
        default: false

      talos_version:
        description: "Talos version"
        required: true
        type: choice
        options:
          - v1.7.6
          - v1.7.5
          - v1.7.4
          - v1.7.3
          - v1.7.2
          - v1.7.1
          - v1.7.0

      device:
        description: "Device"
        required: true
        type: choice
        options:
          - orangepi-5

      #########################
      # Packages
      #########################
      repo_packages:
        description: "Repository to build packages from"
        required: true
        type: string
        default: "siderolabs/pkgs"
      branch_packages:
        description: "Branch to build packages from"
        required: true
        type: string
        default: "main"

      #########################
      # Base
      #########################
      repo_base:
        description: "Repository to build base from"
        required: true
        type: string
        default: "siderolabs/talos"
      branch_base:
        description: "Branch to build base from"
        required: true
        type: string
        default: "main"

      #########################
      # Overlay
      #########################
      repo_overlay:
        description: "Repository to build overlay from"
        required: true
        type: string
        default: "siderolabs/sbc-rockchip"
      branch_overlay:
        description: "Branch to build overlay from"
        required: true
        type: string
        default: "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  actions: write
  contents: write
  packages: write
  pull-requests: read
  statuses: read

env:
  FORCE_COLOR: "1"

  ORGANISATION: ${{ github.repository_owner }}
  PROJECT: ${{ github.event.repository.name }}

  BRANCH_NAME_CURRENT: ${{ github.head_ref || github.ref_name }}
  BRANCH_NAME_DEFAULT: ${{ github.event.repository.default_branch }}

defaults:
  run:
    shell: bash

jobs:
  ##################################################
  # Pre-flight checks
  ##################################################
  check:
    name: Check
    runs-on: self-hosted

    steps:
      - id: check_env
        name: Check packages
        env:
          PAT_PACKAGES: ${{ secrets.PAT_PACKAGES }}
        run: |
          echo "Checking Personal Access Token"
          if [[ "${PAT_PACKAGES:-EMPTY}" == "EMPTY" ]]; then
            echo "PAT_PACKAGES is not set."
            echo "Please set the PAT_PACKAGES environment variable with a Personal Access Token that has the correct scopes."
            exit 1
          fi

  ##################################################
  # Packages
  ##################################################

  packages:
    name: Packages
    uses: ./.github/workflows/packages.yaml
    secrets: inherit
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      repository: ${{ inputs.repo_packages }}
      branch: ${{ inputs.branch_packages }}
      path: _make/packages
      talos_version: ${{ inputs.talos_version }}
      device: ${{ inputs.device }}

  ##################################################
  # Base
  ##################################################

  base:
    name: Base
    needs:
      - packages
    uses: ./.github/workflows/base.yaml
    secrets: inherit
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      repository: ${{ inputs.repo_base }}
      branch: ${{ inputs.branch_base }}
      path: _make/base
      talos_version: ${{ inputs.talos_version }}
      device: ${{ inputs.device }}

  ##################################################
  # Overlay
  ##################################################

  overlay:
    name: Overlay
    needs:
      - packages
      - base
    uses: ./.github/workflows/overlay.yaml
    secrets: inherit
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      repository: ${{ inputs.repo_overlay }}
      branch: ${{ inputs.branch_overlay }}
      path: _make/overlay
      talos_version: ${{ inputs.talos_version }}
      device: ${{ inputs.device }}

  ##################################################
  # Boot
  ##################################################

  boot:
    name: Boot
    needs:
      - packages
      - base
      - overlay
    uses: ./.github/workflows/boot.yaml
    secrets: inherit
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      talos_version: ${{ inputs.talos_version }}
      device: ${{ inputs.device }}

  ##################################################
  # Release
  ##################################################

  release:
    name: Release

    if: ${{ github.event.inputs.release == 'true' }}

    needs:
      - packages
      - base
      - overlay
      - boot

    runs-on: self-hosted

    steps:
      - id: download_artifacts
        name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/_artifacts

      - id: rename_artifacts
        name: Rename artifacts
        run: |
          pushd ${{ github.workspace }}/_artifacts
          ls -lah
          echo "Renaming ${{ inputs.device }} image"
          mv \
            metal-arm64.raw.xz \
            ${{ inputs.device }}-${{ inputs.talos_version }}.raw.xz
          popd

      - id: calver
        name: Set Calver Version
        run: |
          if [[ "${BRANCH_NAME_CURRENT:-UNKNOWN}" == "${BRANCH_NAME_DEFAULT:-DEFAULT}" ]];
          then
            echo "Set CalVer for default branch"
            echo "package_version=$(date '+%Y-%m-%d')" >> "$GITHUB_OUTPUT"
          else
            echo "Set CalVer for non-default branch"
            echo "package_version=$(date '+%Y.%m.%d')-$(date -d "1970-01-01 UTC $(date +%T)" +%s)" >> "$GITHUB_OUTPUT"
          fi

      - id: check_tags
        name: Check git tags
        env:
          TAG: ${{ steps.calver.outputs.package_version }}
        run: |
          git fetch --tags
          if git show-ref --tags --verify --quiet "refs/tags/$TAG"
          then
            echo "The Release tag ${TAG} already exists, did you forget to bump the version?"
            exit 1
          elif [[ "${BRANCH_NAME_CURRENT:-UNKNOWN}" == "${BRANCH_NAME_DEFAULT:-DEFAULT}" ]];
          then
            echo "Default branch, creating release tag ${TAG}"
            echo "CREATE_TAG=true" >> "${GITHUB_OUTPUT}"
          else
            echo "Non-default branch, skipping release tag ${TAG}"
            echo "CREATE_TAG=false" >> "${GITHUB_OUTPUT}"
          fi

      - id: create_release
        name: Create Release
        if: ${{ steps.check_tags.outputs.CREATE_TAG == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ inputs.device }} v${{ steps.calver.outputs.package_version }}
          token: ${{ secrets.PAT_PACKAGES }}
          tag_name: ${{ steps.calver.outputs.package_version }}
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
          append_body: true
          files: ${{ github.workspace }}/_artifacts/**
          body: |
            ## Images

            Device name: ${{ inputs.device }}
            Talos version: ${{ inputs.talos_version }}

            ```bash
            talosctl upgrade \
              --nodes <your_nodes> \
              --image ghcr.io/${{ github.actor }}/installer:${{ inputs.talos_version }}-${{ inputs.device }}
            ```
